{"ast":null,"code":"import _defineProperty from \"E:/Project/next-jam/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Project\\\\next-jam\\\\pages\\\\index.js\";\nimport Layout from \"../src/component/Layout\";\nimport ReactMarkdown from \"react-markdown\";\nimport Link from \"next/link\";\nimport getConfig from \"next/config\";\nexport var __N_SSG = true;\nexport default function Home(props) {\n  var _this = this;\n\n  var _getConfig = getConfig(),\n      publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\n  var posts = props.posts;\n  var pages = props.pages;\n  var config = props.configData;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    config: config,\n    pages: pages,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-feed\",\n      children: posts && posts.map(function (post, index) {\n        var _jsxDEV2;\n\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"post-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"post-title\",\n              children: /*#__PURE__*/_jsxDEV(Link, (_jsxDEV2 = {\n                href: {\n                  pathname: \"/blog/[slug]\",\n                  query: {\n                    slug: post.slug\n                  }\n                }\n              }, _defineProperty(_jsxDEV2, \"href\", \"/posts/[slug]\"), _defineProperty(_jsxDEV2, \"as\", \"/posts/\".concat(post.id)), _defineProperty(_jsxDEV2, \"children\", /*#__PURE__*/_jsxDEV(\"a\", {\n                rel: \"bookmark\",\n                children: post.data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 23\n              }, _this)), _jsxDEV2), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-meta\",\n              children: [\"Published on\", \" \", /*#__PURE__*/_jsxDEV(\"time\", {\n                className: \"published\",\n                dateTime: \"2020-02-20 00:00\",\n                children: post.data.createTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/posts/[slug]\",\n            as: \"\".concat(post.id),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"post-thumbnail\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"thumbnail\",\n                src: post.data.featureImage[0],\n                alt: post.data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-content\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              source: post.data.Desciption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"read-more\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/posts/[slug]\",\n              as: \"\".concat(post.id),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"read-more-link\",\n                children: [\"Keep reading\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"icon-arrow-right\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/Project/next-jam/pages/index.js"],"names":["Layout","ReactMarkdown","Link","getConfig","Home","props","publicRuntimeConfig","posts","pages","config","configData","map","post","index","pathname","query","slug","id","data","title","createTime","featureImage","Desciption"],"mappings":"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","sourcesContent":["import Layout from \"../src/component/Layout\";\nimport ReactMarkdown from \"react-markdown\";\nimport Link from \"next/link\";\nimport configData from \"../data/config.json\";\nimport axios from \"axios\";\nimport getConfig from \"next/config\";\n\nexport default function Home(props) {\n  const { publicRuntimeConfig } = getConfig();\n  const posts = props.posts;\n  const pages = props.pages;\n  const config = props.configData;\n\n  return (\n    <Layout config={config} pages={pages}>\n      <div className=\"post-feed\">\n        {posts &&\n          posts.map((post, index) => {\n            return (\n              <article className=\"post\" key={index}>\n                <header className=\"post-header\">\n                  <h2 className=\"post-title\">\n                    <Link\n                      href={{\n                        pathname: \"/blog/[slug]\",\n                        query: { slug: post.slug },\n                      }}\n                      href=\"/posts/[slug]\"\n                      as={`/posts/${post.id}`}\n                    >\n                      <a rel=\"bookmark\">{post.data.title}</a>\n                    </Link>\n                  </h2>\n                  <div className=\"post-meta\">\n                    Published on{\" \"}\n                    <time className=\"published\" dateTime=\"2020-02-20 00:00\">\n                      {post.data.createTime}\n                    </time>\n                  </div>\n                </header>\n\n                <Link href=\"/posts/[slug]\" as={`${post.id}`}>\n                  <a className=\"post-thumbnail\">\n                    <img\n                      className=\"thumbnail\"\n                      src={post.data.featureImage[0]}\n                      alt={post.data.title}\n                    />\n                  </a>\n                </Link>\n\n                <div className=\"post-content\">\n                  <ReactMarkdown source={post.data.Desciption} />\n                </div>\n                <p className=\"read-more\">\n                  <Link href=\"/posts/[slug]\" as={`${post.id}`}>\n                    <a className=\"read-more-link\">\n                      Keep reading{\" \"}\n                      <span\n                        className=\"icon-arrow-right\"\n                        aria-hidden=\"true\"\n                      ></span>\n                    </a>\n                  </Link>\n                </p>\n              </article>\n            );\n          })}\n      </div>\n    </Layout>\n  );\n}\n\nexport async function getStaticProps() {\n  const data = await axios.get(`${process.env.API}/news/post/`, {\n    headers: {\n      \"X-Flatten\": true,\n      \"X-Languages\": \"vi\",\n    },\n  });\n  const pages = [];\n  data.data.items.forEach((item) => {\n    console.log(\"item\", item);\n  });\n  // const pages = sb.pages.filter(\n  //   (page) => page.path !== \"/\" && !page.path.startsWith(\"/posts/\")\n  // );\n  // const posts = data.data.items.filter(\n  //   (page) => page.path !== \"/\" && page.path.startsWith(\"/posts/\")\n  // );\n  const posts = data.data.items;\n  return {\n    props: {\n      configData,\n      pages,\n      posts,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}