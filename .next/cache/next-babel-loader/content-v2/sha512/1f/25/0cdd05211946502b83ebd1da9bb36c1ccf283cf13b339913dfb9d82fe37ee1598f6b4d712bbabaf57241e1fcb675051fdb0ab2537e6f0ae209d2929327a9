{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Project\\\\next-jam\\\\pages\\\\index.js\";\nimport Layout from \"../src/component/Layout\";\nimport ReactMarkdown from \"react-markdown\";\nimport Link from \"next/link\";\nimport configData from \"../data/config.json\";\nimport axios from \"axios\";\nimport getConfig from \"next/config\";\nexport default function Home(props) {\n  const {\n    publicRuntimeConfig\n  } = getConfig();\n  const posts = props.posts;\n  const pages = props.pages;\n  const config = props.configData;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    config: config,\n    pages: pages,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-feed\",\n      children: posts && posts.map((post, index) => {\n        let postDate = new Date(post.page.date);\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"post-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"post-title\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/posts/[slug]\",\n                as: `${post.path}`,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  rel: \"bookmark\",\n                  children: post.page.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-meta\",\n              children: [\"Published on\", \" \", /*#__PURE__*/_jsxDEV(\"time\", {\n                className: \"published\",\n                dateTime: \"2020-02-20 00:00\",\n                children: postDate.toDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/posts/[slug]\",\n            as: `${post.path}`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"post-thumbnail\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"thumbnail\",\n                src: post.page.image,\n                alt: \"{post.page.title}\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-content\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              source: post.page.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"read-more\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/posts/[slug]\",\n              as: `${post.path}`,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"read-more-link\",\n                children: [\"Keep reading\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"icon-arrow-right\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticProps() {\n  const data = await axios.get(`${process.env.API}/news/post/`, {\n    headers: {\n      \"X-Flatten\": true,\n      \"X-Languages\": \"vi\"\n    }\n  });\n  const pages = [];\n  console.log(\"data\", data.data.items); // const pages = sb.pages.filter(\n  //   (page) => page.path !== \"/\" && !page.path.startsWith(\"/posts/\")\n  // );\n  // const posts = data.data.items.filter(\n  //   (page) => page.path !== \"/\" && page.path.startsWith(\"/posts/\")\n  // );\n\n  const posts = data.data.items;\n  return {\n    props: {\n      configData,\n      // pages,\n      posts\n    }\n  };\n}","map":{"version":3,"sources":["E:/Project/next-jam/pages/index.js"],"names":["Layout","ReactMarkdown","Link","configData","axios","getConfig","Home","props","publicRuntimeConfig","posts","pages","config","map","post","index","postDate","Date","page","date","path","title","toDateString","image","description","getStaticProps","data","get","process","env","API","headers","console","log","items"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAA0BH,SAAS,EAAzC;AACA,QAAMI,KAAK,GAAGF,KAAK,CAACE,KAApB;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACG,KAApB;AACA,QAAMC,MAAM,GAAGJ,KAAK,CAACJ,UAArB;AAEA,sBACE,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAEQ,MAAhB;AAAwB,IAAA,KAAK,EAAED,KAA/B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGD,KAAK,IACJA,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,YAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASH,IAAI,CAACI,IAAL,CAAUC,IAAnB,CAAf;AACA,4BACE;AAAS,UAAA,SAAS,EAAC,MAAnB;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAC,eAAX;AAA2B,gBAAA,EAAE,EAAG,GAAEL,IAAI,CAACM,IAAK,EAA5C;AAAA,uCACE;AAAG,kBAAA,GAAG,EAAC,UAAP;AAAA,4BAAmBN,IAAI,CAACI,IAAL,CAAUG;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,yCACe,GADf,eAEE;AAAM,gBAAA,SAAS,EAAC,WAAhB;AAA4B,gBAAA,QAAQ,EAAC,kBAArC;AAAA,0BACGL,QAAQ,CAACM,YAAT;AADH;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,eAAX;AAA2B,YAAA,EAAE,EAAG,GAAER,IAAI,CAACM,IAAK,EAA5C;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC,gBAAb;AAAA,qCACE;AACE,gBAAA,SAAS,EAAC,WADZ;AAEE,gBAAA,GAAG,EAAEN,IAAI,CAACI,IAAL,CAAUK,KAFjB;AAGE,gBAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAfF,eAyBE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,MAAM,EAAET,IAAI,CAACI,IAAL,CAAUM;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzBF,eA4BE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC,eAAX;AAA2B,cAAA,EAAE,EAAG,GAAEV,IAAI,CAACM,IAAK,EAA5C;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,gBAAb;AAAA,2CACe,GADf,eAEE;AACE,kBAAA,SAAS,EAAC,kBADZ;AAEE,iCAAY;AAFd;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA5BF;AAAA,WAA+BL,KAA/B;AAAA;AAAA;AAAA;AAAA,gBADF;AA0CD,OA5CD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD;AAED,OAAO,eAAeU,cAAf,GAAgC;AACrC,QAAMC,IAAI,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,GAAI,aAA7B,EAA2C;AAC5DC,IAAAA,OAAO,EAAE;AACP,mBAAa,IADN;AAEP,qBAAe;AAFR;AADmD,GAA3C,CAAnB;AAMA,QAAMpB,KAAK,GAAG,EAAd;AACAqB,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,IAAI,CAACA,IAAL,CAAUQ,KAA9B,EARqC,CASrC;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMxB,KAAK,GAAGgB,IAAI,CAACA,IAAL,CAAUQ,KAAxB;AACA,SAAO;AACL1B,IAAAA,KAAK,EAAE;AACLJ,MAAAA,UADK;AAEL;AACAM,MAAAA;AAHK;AADF,GAAP;AAOD","sourcesContent":["import Layout from \"../src/component/Layout\";\nimport ReactMarkdown from \"react-markdown\";\nimport Link from \"next/link\";\nimport configData from \"../data/config.json\";\nimport axios from \"axios\";\nimport getConfig from \"next/config\";\n\nexport default function Home(props) {\n  const { publicRuntimeConfig } = getConfig();\n  const posts = props.posts;\n  const pages = props.pages;\n  const config = props.configData;\n\n  return (\n    <Layout config={config} pages={pages}>\n      <div className=\"post-feed\">\n        {posts &&\n          posts.map((post, index) => {\n            let postDate = new Date(post.page.date);\n            return (\n              <article className=\"post\" key={index}>\n                <header className=\"post-header\">\n                  <h2 className=\"post-title\">\n                    <Link href=\"/posts/[slug]\" as={`${post.path}`}>\n                      <a rel=\"bookmark\">{post.page.title}</a>\n                    </Link>\n                  </h2>\n                  <div className=\"post-meta\">\n                    Published on{\" \"}\n                    <time className=\"published\" dateTime=\"2020-02-20 00:00\">\n                      {postDate.toDateString()}\n                    </time>\n                  </div>\n                </header>\n\n                <Link href=\"/posts/[slug]\" as={`${post.path}`}>\n                  <a className=\"post-thumbnail\">\n                    <img\n                      className=\"thumbnail\"\n                      src={post.page.image}\n                      alt=\"{post.page.title}\"\n                    />\n                  </a>\n                </Link>\n\n                <div className=\"post-content\">\n                  <ReactMarkdown source={post.page.description} />\n                </div>\n                <p className=\"read-more\">\n                  <Link href=\"/posts/[slug]\" as={`${post.path}`}>\n                    <a className=\"read-more-link\">\n                      Keep reading{\" \"}\n                      <span\n                        className=\"icon-arrow-right\"\n                        aria-hidden=\"true\"\n                      ></span>\n                    </a>\n                  </Link>\n                </p>\n              </article>\n            );\n          })}\n      </div>\n    </Layout>\n  );\n}\n\nexport async function getStaticProps() {\n  const data = await axios.get(`${process.env.API}/news/post/`, {\n    headers: {\n      \"X-Flatten\": true,\n      \"X-Languages\": \"vi\",\n    },\n  });\n  const pages = [];\n  console.log(\"data\", data.data.items);\n  // const pages = sb.pages.filter(\n  //   (page) => page.path !== \"/\" && !page.path.startsWith(\"/posts/\")\n  // );\n  // const posts = data.data.items.filter(\n  //   (page) => page.path !== \"/\" && page.path.startsWith(\"/posts/\")\n  // );\n  const posts = data.data.items;\n  return {\n    props: {\n      configData,\n      // pages,\n      posts,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}