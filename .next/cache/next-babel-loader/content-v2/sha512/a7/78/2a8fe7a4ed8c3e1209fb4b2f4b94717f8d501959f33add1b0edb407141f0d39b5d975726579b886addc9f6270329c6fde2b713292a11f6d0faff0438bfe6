{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport dynamic from \"next/dynamic\";\nimport Router from \"next/router\";\nconst Cmp = dynamic({\n  loader: () => import(\"../../src/component/Post\"),\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../../src/component/Post\")],\n    modules: [\"../../src/component/Post\"]\n  }\n}, {\n  ssr: false\n});\n\nconst PostPage = ({\n  ctx\n}) => {\n  // if (ctx.query.slug) {\n  //   if (typeof window !== \"undefined\") {\n  //     Router.replace({\n  //       path: \"/post\",\n  //       params: {\n  //         slug: ctx.query.slug,\n  //       },\n  //     });\n  //   }\n  // }\n  return /*#__PURE__*/_jsx(Cmp, _objectSpread({}, ctx));\n};\n\nexport default PostPage;","map":null,"metadata":{},"sourceType":"module"}