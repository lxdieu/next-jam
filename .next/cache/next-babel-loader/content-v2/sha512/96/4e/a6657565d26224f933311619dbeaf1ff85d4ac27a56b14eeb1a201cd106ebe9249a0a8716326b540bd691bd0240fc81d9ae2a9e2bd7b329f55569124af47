{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Project\\\\next-jam\\\\pages\\\\posts\\\\[slug].js\";\nimport Layout from \"../../src/component/Layout\";\nimport ReactMarkdown from \"react-markdown\";\nimport configData from \"../../data/config.json\";\nexport default function Post(props) {\n  const page = props.page;\n  const pages = props.pages;\n  const config = props.configData; // swap the background image for the image on this page\n\n  if (page.page && page.page.image) config.bgimage = page.page.image;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    config: config,\n    pages: pages,\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"post page post-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"post-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"post-title\",\n          children: page.page.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-subtitle\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          source: page.page.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          source: page.page.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths() {\n  const paths = await sourcebitDataClient.getStaticPaths();\n  return {\n    paths: paths.filter(path => path.startsWith(\"/posts/\")),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const sb = await sourcebitDataClient.getData();\n  const pagePath = \"/posts/\" + params.slug;\n  const page = sb.pages.filter(page => page.path == pagePath)[0];\n  const pages = sb.pages.filter(page => page.path !== \"/\" && !page.path.startsWith(\"/posts/\"));\n  return {\n    props: {\n      configData,\n      page,\n      pages\n    }\n  };\n}","map":{"version":3,"sources":["E:/Project/next-jam/pages/posts/[slug].js"],"names":["Layout","ReactMarkdown","configData","Post","props","page","pages","config","image","bgimage","title","subtitle","body","getStaticPaths","paths","sourcebitDataClient","filter","path","startsWith","fallback","getStaticProps","params","sb","getData","pagePath","slug"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAMC,KAAK,GAAGF,KAAK,CAACE,KAApB;AACA,QAAMC,MAAM,GAAGH,KAAK,CAACF,UAArB,CAHkC,CAKlC;;AACA,MAAIG,IAAI,CAACA,IAAL,IAAaA,IAAI,CAACA,IAAL,CAAUG,KAA3B,EAAkCD,MAAM,CAACE,OAAP,GAAiBJ,IAAI,CAACA,IAAL,CAAUG,KAA3B;AAClC,sBACE,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAED,MAAhB;AAAwB,IAAA,KAAK,EAAED,KAA/B;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,qBAAnB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BD,IAAI,CAACA,IAAL,CAAUK;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,MAAM,EAAEL,IAAI,CAACA,IAAL,CAAUM;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,MAAM,EAAEN,IAAI,CAACA,IAAL,CAAUO;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAG,MAAMC,mBAAmB,CAACF,cAApB,EAApB;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEA,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,UAAL,CAAgB,SAAhB,CAAvB,CADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMC,EAAE,GAAG,MAAMP,mBAAmB,CAACQ,OAApB,EAAjB;AACA,QAAMC,QAAQ,GAAG,YAAYH,MAAM,CAACI,IAApC;AACA,QAAMpB,IAAI,GAAGiB,EAAE,CAAChB,KAAH,CAASU,MAAT,CAAiBX,IAAD,IAAUA,IAAI,CAACY,IAAL,IAAaO,QAAvC,EAAiD,CAAjD,CAAb;AACA,QAAMlB,KAAK,GAAGgB,EAAE,CAAChB,KAAH,CAASU,MAAT,CACXX,IAAD,IAAUA,IAAI,CAACY,IAAL,KAAc,GAAd,IAAqB,CAACZ,IAAI,CAACY,IAAL,CAAUC,UAAV,CAAqB,SAArB,CADpB,CAAd;AAIA,SAAO;AACLd,IAAAA,KAAK,EAAE;AACLF,MAAAA,UADK;AAELG,MAAAA,IAFK;AAGLC,MAAAA;AAHK;AADF,GAAP;AAOD","sourcesContent":["import Layout from \"../../src/component/Layout\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport configData from \"../../data/config.json\";\r\n\r\nexport default function Post(props) {\r\n  const page = props.page;\r\n  const pages = props.pages;\r\n  const config = props.configData;\r\n\r\n  // swap the background image for the image on this page\r\n  if (page.page && page.page.image) config.bgimage = page.page.image;\r\n  return (\r\n    <Layout config={config} pages={pages}>\r\n      <article className=\"post page post-full\">\r\n        <header className=\"post-header\">\r\n          <h1 className=\"post-title\">{page.page.title}</h1>\r\n        </header>\r\n        <div className=\"post-subtitle\">\r\n          <ReactMarkdown source={page.page.subtitle} />\r\n        </div>\r\n        <div className=\"post-content\">\r\n          <ReactMarkdown source={page.page.body} />\r\n        </div>\r\n      </article>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const paths = await sourcebitDataClient.getStaticPaths();\r\n  return {\r\n    paths: paths.filter((path) => path.startsWith(\"/posts/\")),\r\n    fallback: false,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  const sb = await sourcebitDataClient.getData();\r\n  const pagePath = \"/posts/\" + params.slug;\r\n  const page = sb.pages.filter((page) => page.path == pagePath)[0];\r\n  const pages = sb.pages.filter(\r\n    (page) => page.path !== \"/\" && !page.path.startsWith(\"/posts/\")\r\n  );\r\n\r\n  return {\r\n    props: {\r\n      configData,\r\n      page,\r\n      pages,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}